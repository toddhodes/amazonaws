
package com.amazonaws.elasticmapreduce.model;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for HadoopJarStepConfig complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="HadoopJarStepConfig">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Properties" type="{http://elasticmapreduce.amazonaws.com/doc/2009-03-31}KeyValue" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Jar" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="MainClass" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="Args" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * Generated by AWS Code Generator
 * <p/>
 * Tue Apr 21 15:28:27 PDT 2009
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "HadoopJarStepConfig", propOrder = {
    "properties",
    "jar",
    "mainClass",
    "args"
})
public class HadoopJarStepConfig {

    @XmlElement(name = "Properties")
    protected List<KeyValue> properties;
    @XmlElement(name = "Jar", required = true)
    protected String jar;
    @XmlElement(name = "MainClass")
    protected String mainClass;
    @XmlElement(name = "Args", required = true)
    protected List<String> args;

    /**
     * Default constructor
     * 
     */
    public HadoopJarStepConfig() {
        super();
    }

    /**
     * Value constructor
     * 
     */
    public HadoopJarStepConfig(final List<KeyValue> properties, final String jar, final String mainClass, final List<String> args) {
        this.properties = properties;
        this.jar = jar;
        this.mainClass = mainClass;
        this.args = args;
    }

    /**
     * Gets the value of the properties property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the properties property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getProperties().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link KeyValue }
     * 
     * 
     */
    public List<KeyValue> getProperties() {
        if (properties == null) {
            properties = new ArrayList<KeyValue>();
        }
        return this.properties;
    }

    public boolean isSetProperties() {
        return ((this.properties!= null)&&(!this.properties.isEmpty()));
    }

    public void unsetProperties() {
        this.properties = null;
    }

    /**
     * Gets the value of the jar property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getJar() {
        return jar;
    }

    /**
     * Sets the value of the jar property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setJar(String value) {
        this.jar = value;
    }

    public boolean isSetJar() {
        return (this.jar!= null);
    }

    /**
     * Gets the value of the mainClass property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMainClass() {
        return mainClass;
    }

    /**
     * Sets the value of the mainClass property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMainClass(String value) {
        this.mainClass = value;
    }

    public boolean isSetMainClass() {
        return (this.mainClass!= null);
    }

    /**
     * Gets the value of the args property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the args property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getArgs().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getArgs() {
        if (args == null) {
            args = new ArrayList<String>();
        }
        return this.args;
    }

    public boolean isSetArgs() {
        return ((this.args!= null)&&(!this.args.isEmpty()));
    }

    public void unsetArgs() {
        this.args = null;
    }

    /**
     * Sets the value of the Properties property.
     * 
     * @param values
     * @return
     *     this instance
     */
    public HadoopJarStepConfig withProperties(KeyValue... values) {
        for (KeyValue value: values) {
            getProperties().add(value);
        }
        return this;
    }

    /**
     * Sets the value of the Jar property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public HadoopJarStepConfig withJar(String value) {
        setJar(value);
        return this;
    }

    /**
     * Sets the value of the MainClass property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public HadoopJarStepConfig withMainClass(String value) {
        setMainClass(value);
        return this;
    }

    /**
     * Sets the value of the Args property.
     * 
     * @param values
     * @return
     *     this instance
     */
    public HadoopJarStepConfig withArgs(String... values) {
        for (String value: values) {
            getArgs().add(value);
        }
        return this;
    }

    /**
     * Sets the value of the properties property.
     * 
     * @param properties
     *     allowed object is
     *     {@link KeyValue }
     *     
     */
    public void setProperties(List<KeyValue> properties) {
        this.properties = properties;
    }

    /**
     * Sets the value of the args property.
     * 
     * @param args
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setArgs(List<String> args) {
        this.args = args;
    }
    

    /**
     * 
     * XML fragment representation of this object
     * 
     * @return XML fragment for this object. Name for outer
     * tag expected to be set by calling method. This fragment
     * returns inner properties representation only
     */
    protected String toXMLFragment() {
        StringBuffer xml = new StringBuffer();
        java.util.List<KeyValue> propertiesList = getProperties();
        for (KeyValue properties : propertiesList) {
            xml.append("<Properties>");
            xml.append(properties.toXMLFragment());
            xml.append("</Properties>");
        }
        if (isSetJar()) {
            xml.append("<Jar>");
            xml.append(escapeXML(getJar()));
            xml.append("</Jar>");
        }
        if (isSetMainClass()) {
            xml.append("<MainClass>");
            xml.append(escapeXML(getMainClass()));
            xml.append("</MainClass>");
        }
        java.util.List<String> argsList  =  getArgs();
        for (String args : argsList) { 
            xml.append("<Args>");
            xml.append(escapeXML(args));
            xml.append("</Args>");
        }	
        return xml.toString();
    }

    /**
     * 
     * Escape XML special characters
     */
    private String escapeXML(String string) {
        StringBuffer sb = new StringBuffer();
        int length = string.length();
        for (int i = 0; i < length; ++i) {
            char c = string.charAt(i);
            switch (c) {
            case '&':
                sb.append("&amp;");
                break;
            case '<':
                sb.append("&lt;");
                break;
            case '>':
                sb.append("&gt;");
                break;
            case '\'':
                sb.append("&#039;");
                break;
            case '"':
                sb.append("&quot;");
                break;
            default:
                sb.append(c);
            }
        }
        return sb.toString();
    }



    /**
     *
     * JSON fragment representation of this object
     *
     * @return JSON fragment for this object. Name for outer
     * object expected to be set by calling method. This fragment
     * returns inner properties representation only
     *
     */
    protected String toJSONFragment() {
        StringBuffer json = new StringBuffer();
        boolean first = true;
        if (isSetProperties()) {
            if (!first) json.append(", ");
            json.append("\"Properties\" : [");
            java.util.List<KeyValue> propertiesList = getProperties();
            int propertiesListIndex = 0;
            for (KeyValue properties : propertiesList) {
                if (propertiesListIndex > 0) json.append(", ");
                json.append("{");
                json.append("");
                json.append(properties.toJSONFragment());
                json.append("}");
                first = false;
                ++propertiesListIndex;
            }
            json.append("]");
        }
        if (isSetJar()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("Jar"));
            json.append(" : ");
            json.append(quoteJSON(getJar()));
            first = false;
        }
        if (isSetMainClass()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("MainClass"));
            json.append(" : ");
            json.append(quoteJSON(getMainClass()));
            first = false;
        }
        if (isSetArgs()) {
            if (!first) json.append(", ");
            json.append("\"Args\" : [");
            java.util.List<String> argsList  =  getArgs();
            int argsListIndex  =  0;
            for (String args : argsList) {
                if (argsListIndex > 0) json.append(", ");
                    json.append(quoteJSON(args));
                ++argsListIndex;
            }
            json.append("]");
            first = false;
        }
        return json.toString();
    }

    /**
     *
     * Quote JSON string
     */
    private String quoteJSON(String string) {
        StringBuffer sb = new StringBuffer();
        sb.append("\"");
        int length = string.length();
        for (int i = 0; i < length; ++i) {
            char c = string.charAt(i);
            switch (c) {
            case '"':
                sb.append("\\\"");
                break;
            case '\\':
                sb.append("\\\\");
                break;
            case '/':
                sb.append("\\/");
                break;
            case '\b':
                sb.append("\\b");
                break;
            case '\f':
                sb.append("\\f");
                break;
            case '\n':
                sb.append("\\n");
                break;
            case '\r':
                sb.append("\\r");
                break;
            case '\t':
                sb.append("\\t");
                break;
            default:
                if (c <  ' ') {
                    sb.append("\\u" + String.format("%03x", Integer.valueOf(c)));
                } else {
                sb.append(c);
            }
        }
        }
        sb.append("\"");
        return sb.toString();
    }


}
