
package com.amazonaws.elasticmapreduce.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for StepConfig complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="StepConfig">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Name" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="ActionOnFailure" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="HadoopJarStep" type="{http://elasticmapreduce.amazonaws.com/doc/2009-03-31}HadoopJarStepConfig"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * Generated by AWS Code Generator
 * <p/>
 * Tue Apr 21 15:28:27 PDT 2009
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "StepConfig", propOrder = {
    "name",
    "actionOnFailure",
    "hadoopJarStep"
})
public class StepConfig {

    @XmlElement(name = "Name", required = true)
    protected String name;
    @XmlElement(name = "ActionOnFailure")
    protected String actionOnFailure;
    @XmlElement(name = "HadoopJarStep", required = true)
    protected HadoopJarStepConfig hadoopJarStep;

    /**
     * Default constructor
     * 
     */
    public StepConfig() {
        super();
    }

    /**
     * Value constructor
     * 
     */
    public StepConfig(final String name, final String actionOnFailure, final HadoopJarStepConfig hadoopJarStep) {
        this.name = name;
        this.actionOnFailure = actionOnFailure;
        this.hadoopJarStep = hadoopJarStep;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    public boolean isSetName() {
        return (this.name!= null);
    }

    /**
     * Gets the value of the actionOnFailure property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getActionOnFailure() {
        return actionOnFailure;
    }

    /**
     * Sets the value of the actionOnFailure property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setActionOnFailure(String value) {
        this.actionOnFailure = value;
    }

    public boolean isSetActionOnFailure() {
        return (this.actionOnFailure!= null);
    }

    /**
     * Gets the value of the hadoopJarStep property.
     * 
     * @return
     *     possible object is
     *     {@link HadoopJarStepConfig }
     *     
     */
    public HadoopJarStepConfig getHadoopJarStep() {
        return hadoopJarStep;
    }

    /**
     * Sets the value of the hadoopJarStep property.
     * 
     * @param value
     *     allowed object is
     *     {@link HadoopJarStepConfig }
     *     
     */
    public void setHadoopJarStep(HadoopJarStepConfig value) {
        this.hadoopJarStep = value;
    }

    public boolean isSetHadoopJarStep() {
        return (this.hadoopJarStep!= null);
    }

    /**
     * Sets the value of the Name property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public StepConfig withName(String value) {
        setName(value);
        return this;
    }

    /**
     * Sets the value of the ActionOnFailure property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public StepConfig withActionOnFailure(String value) {
        setActionOnFailure(value);
        return this;
    }

    /**
     * Sets the value of the HadoopJarStep property.
     * 
     * @param value
     * @return
     *     this instance
     */
    public StepConfig withHadoopJarStep(HadoopJarStepConfig value) {
        setHadoopJarStep(value);
        return this;
    }
    

    /**
     * 
     * XML fragment representation of this object
     * 
     * @return XML fragment for this object. Name for outer
     * tag expected to be set by calling method. This fragment
     * returns inner properties representation only
     */
    protected String toXMLFragment() {
        StringBuffer xml = new StringBuffer();
        if (isSetName()) {
            xml.append("<Name>");
            xml.append(escapeXML(getName()));
            xml.append("</Name>");
        }
        if (isSetActionOnFailure()) {
            xml.append("<ActionOnFailure>");
            xml.append(escapeXML(getActionOnFailure()));
            xml.append("</ActionOnFailure>");
        }
        if (isSetHadoopJarStep()) {
            HadoopJarStepConfig  hadoopJarStep = getHadoopJarStep();
            xml.append("<HadoopJarStep>");
            xml.append(hadoopJarStep.toXMLFragment());
            xml.append("</HadoopJarStep>");
        } 
        return xml.toString();
    }

    /**
     * 
     * Escape XML special characters
     */
    private String escapeXML(String string) {
        StringBuffer sb = new StringBuffer();
        int length = string.length();
        for (int i = 0; i < length; ++i) {
            char c = string.charAt(i);
            switch (c) {
            case '&':
                sb.append("&amp;");
                break;
            case '<':
                sb.append("&lt;");
                break;
            case '>':
                sb.append("&gt;");
                break;
            case '\'':
                sb.append("&#039;");
                break;
            case '"':
                sb.append("&quot;");
                break;
            default:
                sb.append(c);
            }
        }
        return sb.toString();
    }



    /**
     *
     * JSON fragment representation of this object
     *
     * @return JSON fragment for this object. Name for outer
     * object expected to be set by calling method. This fragment
     * returns inner properties representation only
     *
     */
    protected String toJSONFragment() {
        StringBuffer json = new StringBuffer();
        boolean first = true;
        if (isSetName()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("Name"));
            json.append(" : ");
            json.append(quoteJSON(getName()));
            first = false;
        }
        if (isSetActionOnFailure()) {
            if (!first) json.append(", ");
            json.append(quoteJSON("ActionOnFailure"));
            json.append(" : ");
            json.append(quoteJSON(getActionOnFailure()));
            first = false;
        }
        if (isSetHadoopJarStep()) {
            if (!first) json.append(", ");
            json.append("\"HadoopJarStep\" : {");
            HadoopJarStepConfig  hadoopJarStep = getHadoopJarStep();


            json.append(hadoopJarStep.toJSONFragment());
            json.append("}");
            first = false;
        }
        return json.toString();
    }

    /**
     *
     * Quote JSON string
     */
    private String quoteJSON(String string) {
        StringBuffer sb = new StringBuffer();
        sb.append("\"");
        int length = string.length();
        for (int i = 0; i < length; ++i) {
            char c = string.charAt(i);
            switch (c) {
            case '"':
                sb.append("\\\"");
                break;
            case '\\':
                sb.append("\\\\");
                break;
            case '/':
                sb.append("\\/");
                break;
            case '\b':
                sb.append("\\b");
                break;
            case '\f':
                sb.append("\\f");
                break;
            case '\n':
                sb.append("\\n");
                break;
            case '\r':
                sb.append("\\r");
                break;
            case '\t':
                sb.append("\\t");
                break;
            default:
                if (c <  ' ') {
                    sb.append("\\u" + String.format("%03x", Integer.valueOf(c)));
                } else {
                sb.append(c);
            }
        }
        }
        sb.append("\"");
        return sb.toString();
    }


}
